[["index.html", "Data Analysis for Public Affairs with R 1 Preface", " Data Analysis for Public Affairs with R Jerome Dumortier 2021-03-17 1 Preface This book serves as an introduction to data analysis for public affairs with R and RStudio. Most examples are drawn from public affairs and economics. "],["introduction.html", "2 Introduction", " 2 Introduction ## Loading required package: dfidx ## ## Attaching package: &#39;dfidx&#39; ## The following object is masked from &#39;package:stats&#39;: ## ## filter ## Loading required package: lmtest ## Loading required package: zoo ## ## Attaching package: &#39;zoo&#39; ## The following objects are masked from &#39;package:base&#39;: ## ## as.Date, as.Date.numeric ## Registered S3 method overwritten by &#39;quantmod&#39;: ## method from ## as.zoo.data.frame zoo ## ## Attaching package: &#39;MASS&#39; ## The following object is masked from &#39;package:dfidx&#39;: ## ## select ## Loading required package: car ## Loading required package: carData ## Loading required package: sandwich ## Loading required package: survival ## Warning: package &#39;glmmML&#39; was built under R version 4.0.4 "],["introduction-to-r.html", "3 Introduction to R", " 3 Introduction to R Topics covered in this lecture Introduction to R and RStudio Data Management Plotting and Graphs with R Basic Statistics In-class exercises will be conducted throughout the Lecture. "],["online-resources-and-help.html", "3.1 Online Resources and Help", " 3.1 Online Resources and Help Very large user community for R. Google search for ``Some topic R usually leads quickly to the desired help. Here are the links to a few online tutorials UCLA Institute for Digital Research and Education StatMethods Statistical tools for high-throughput data analysis Two online resources will provide you the solution to the vast majority of your R questions. Getting on those websites is usually the result of a Google search. Statistical Data Analysis R: This resource contains the function manual for R/RStudio including all packages. Example for a function boxplot. The most helpful part are the examples at the bottom of the page. Stack Overflow: Resources for developers. For example, a Google search for r ggplot two y axis may give you the following result Note that all questions on Stack Overflow have to be accompanied by a re-creatable dataset. Besides many online resources, there are also two useful textbooks Applied Econometrics with R by Christian Kleiber and Achim Zeileis. Introductory Statistics with R by Peter Dalgaard. An additional online tutorial is Using R for Introductory Statistics by John Verzani. "],["opening-rstudio.html", "3.2 Opening RStudio", " 3.2 Opening RStudio Work in RStudio is done in four windows: Script Window This is were you type your R Script (.R) and where you execute commands. Comparable to do-file/editor in Stata. This window needs to be opened by File \\(\\Rightarrow\\) New File \\(\\Rightarrow\\) R Script. Console window Use of R interactively. Should only be used for quick calculations and not part of an analysis. Environment Lists all the variables, data frames, and user-created functions. It is tempting to use the ``Import Dataset function Dont. Plots/Packages/Help There is a base version of R that allows doing many calculations but the power of R comes through its packages. To use functions associated with a particular package, click ``Install in the packages window of RStudio and type in the name of the package. Or alternatively, use install.packages(\"ggplot2\") To use a package, you have to activate it by either checking the box in the window Packages or by including library(packagename). Those packages are updated on a regular basis by users. The \\# allows you to include comments in your script file that are not read by R. It is good practice to start any new script with clearing the memory using the command rm(list=ls()). Use the command get() to determine the current working directory or set the new working directory with the command setwd(), e.g., setwd(\"E:/\"). For file paths, replace \\(\\backslash\\) with \\(/\\). Next, you want to load all libraries necessary for your entire script file with the command library(). It is also good practice to save your R-script on a regular basis. The frontmatter, i.e., the top of a R-script file, could look as follows rm(list=ls()) load(&quot;DataAnalysisPAData.RData&quot;) library(openxlsx) 3.2.1 In-class Exercise 1 Create a R-script file with the following components: Two lines for the title and the date (use #) Clearing all current contents Setting the correct working directory This should be a folder to which you have downloaded all materials. Installing and loading the package openxlsx. "],["functions.html", "3.3 Functions", " 3.3 Functions At the core of R are functions that do things based on your input. The basic structure is object = functionname(argument1=value,argument2=value,...) The structure has the following components object: Output of the function will be assigned to object. functionname: Name of the system function. You can also create and use your own functions. More about this later. argument: Arguments are function specific. value: The value you want a particular argument to take. If a function is executed without an specific assignment, the output will be displayed in the console window. Before using a function, read the documentation. Many functions have default settings. Be aware of default values. In most cases, those defaults are set to values that satisfy most uses. For example, consider the help file for the function t.test. -t.test(x,y=NULL,...,mu=0,conf.level=0.95,...) For this function we have the following default values y=NULL mu=0 conf.level=0.95 "],["data-management.html", "3.4 Data Management", " 3.4 Data Management 3.4.1 Data in R The main data types which can appear in the Environment window of R are: Vectors preselection = seq(1788,2016,4) midterm = seq(by=4,to=2018,from=1790) Matrix somematrix = matrix(8,10,4) Only numerical values are allowed. Data frames By far, the most common data type in R. Comparable to an Excel sheet. More on this later. Lists Collection of objects from of various types. myfirstlist = list(preselection,midterm,somematrix) 3.4.2 Using R as a Calculator Entering heights of people and storing it in a vector named : height = c(71,77,70,73,66,69,73,73,75,76) Calculating the sum, product, natural log, mean, and (element-wise) squaring is done with the following commands: sum(height) prod(height) log(height) # Default is the natural log meanheight = mean(height) heightsq = height^2 Removing (i.e., deleting) unused elements: rm(heightsq,meanheight) 3.4.3 Creating a Data Frame from Scratch Data frames are the most commonly used tables in R/RStudio. They are similar to an Excel sheet. Column names represent the variables and rows represent observations. Column names must be unique and without spaces. Suggestion: Use only lower-case variable names and objects. studentid = 1:10 studentnames = c(&quot;Andrew&quot;,&quot;Linda&quot;,&quot;William&quot;,&quot;Daniel&quot;,&quot;Gina&quot;, &quot;Mick&quot;,&quot;Sonny&quot;,&quot;Wilbur&quot;,&quot;Elisabeth&quot;,&quot;James&quot;) students = data.frame(studentid,studentnames,height) rm(studentid,height,studentnames) 3.4.4 In-class Exercise 2 Create a data frame called students containing the following information: Name Economics English Mindy 80.0 52.5 Gregory 60.0 60.0 Shubra 95.0 77.5 Keith 77.5 30.0 Louisa 97.5 95.0 Notes: Use as the column header for the students names. Once you have created the data frame, remove the unused vectors. "],["basic-multivariate-regression.html", "4 Basic Multivariate Regression", " 4 Basic Multivariate Regression Extension of the bivariate model to multivariate regression One dependent variable but multiple independent variables Topics associated with multivariate regression models covered in this lecture: Multicollinearity Dummy Variables Natural logarithm Functional forms Interaction Terms Bivariate regression model (one independent and one dependent variable) \\[\\begin{equation*} y = \\beta_0 + \\beta_1 x_1 + \\epsilon \\end{equation*}\\] Multivariate linear regression model (multiple independent variables) \\[\\begin{equation*} y = \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2 + \\dots + \\beta_k x_k + \\epsilon \\end{equation*}\\] Whether we consider the univariate or multivariate regression model, the objective is always to minimize the sum of squared errors, hence the name ordinary least square (OLS) model. The equation of a line can be determined using slope and intercept, we can write: \\[\\begin{equation*} E(y|x) = \\beta_0 + \\beta_1 x \\end{equation*}\\] A model with two independent variables (predictors) describes a plane. "],["dummy-variables.html", "4.1 Dummy Variables", " 4.1 Dummy Variables Dummy variables represent a single qualitative characteristic such as religion, gender, or nationality. Dummy variables are independent variables coded as either 0 or 1. For example, consider Example: Price (\\(Y_i\\)) of a car depending on miles (\\(X_i\\)) and AWD (\\(D_i\\)) \\[\\begin{equation*} Y_i = \\beta_0 + \\beta_1 X_i + \\beta_2 D_i + \\epsilon_i \\end{equation*}\\] with \\(D_i = 1\\) if AWD and \\(D_i = 0\\) if RWD. \\end{itemize} This regression can theoretically be separated into two single equations: Interpretation: "],["anova.html", "5 ANOVA", " 5 ANOVA Analysis of Variance (ANOVA) models (also know as Dummy Variable Regression models) are regressions with only dummy variables. An ANOVA model with two independent variables can be written as follows: \\[y_i = \\beta_0 + \\beta_1 \\cdot d_1 + \\beta_2 \\cdot d_2\\] where \\(d_1\\) and \\(d_2\\) are dummy variables. Consider the following model using the gss2018 data: \\[income = \\beta_0 + \\beta_1 \\cdot fulltime + \\beta_2 \\cdot government\\] where fulltime and government are dummy variables. That is, if \\(fulltime=1\\), then the person has a fulltime job. If \\(government=1\\), then the respondent works for the government. To distinguish j categories only j-1 dummy variables are needed. Otherwise, we have perfect multicollinearity. The category without a dummy variable is the base category. bhat = lm(income~fulltime+government,data=gss2018) summary(bhat) ## ## Call: ## lm(formula = income ~ fulltime + government, data = gss2018) ## ## Residuals: ## Min 1Q Median 3Q Max ## -51074 -23574 -6074 16426 152479 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 17521 3377 5.189 2.71e-07 *** ## fulltime 33553 3691 9.091 &lt; 2e-16 *** ## government -6840 3640 -1.879 0.0606 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 39230 on 769 degrees of freedom ## Multiple R-squared: 0.099, Adjusted R-squared: 0.09665 ## F-statistic: 42.25 on 2 and 769 DF, p-value: &lt; 2.2e-16 The income for a person who is working neither for the government nor has a full time job makes on average $17,521. A person not working for the government but with a full time job is earning $17,521+$33,553=$51,074. Note that both dummy variables are statistically significant. Note that the R-squared is very low. "],["exercises.html", "5.1 Exercises", " 5.1 Exercises Consider the data in indyhomes. A real estate agent once mentioned that homes built in the eighties are of lower quality and thus, are cheaper. One possibility to asses this claim is with an ANOVA model. Add three new dummy variables to the data frame: eighties (equal to 1 if the home was built in any year between 1980 to 1989), northwest (equal to 1 if the home is in the 46268 ZIP code), and singlestory (equal to 1 if the home has one story). Estimate the following ANOVA model: \\[price = \\beta_0+\\beta_1 \\cdot d_{80s}+\\beta_2 \\cdot d_{northwest} + \\beta_3 \\cdot d_{single}\\] What do you conclude? Next, add square footage to the model. What has changed in terms of coefficicents? How do you interpret that change? "],["violating-assumptions.html", "6 Violating Assumptions", " 6 Violating Assumptions This chapter introduces the detection and correction of problems with the estimation procedure due to the violation of the key assumptions necessary for the OLS model to work. The following R packages are needed for this chapter: car, lmtest, orcutt, and sandwich. "],["heteroscedasticity.html", "6.1 Heteroscedasticity", " 6.1 Heteroscedasticity A key assumption of the OLS model is homoscedasticity error terms. That is, the error variance is constant: \\[Var(\\epsilon_i) = \\sigma^2\\] With heteroscedasticity, the variance of the error term is not constant: \\[Var(\\epsilon_i) = \\sigma_i^2\\] For a bivariate regression model with heteroscedastic data, it can be shown that \\[Var(\\hat{\\beta_1}) = \\frac{\\sum x_i^2 \\sigma_i^2}{(\\sum x_i^2)^2}\\] This is different from the variance of the coefficient estimate under homoscedasticity: \\[Var(\\hat{\\beta_1}) = \\frac{\\sigma^2}{\\sum x_i^2}\\] Unbiasedness of the OLS estimator is not affected but the variance of \\(\\beta_1\\) will be larger compared to other estimators. Note that the measure of \\(R^2\\) is unaffected by heteroscedasticity. Homoscedasticity is needed to justify the t-test, F-test, and confidence intervals. The F-statistic does no longer have an F-distribution. In short, hypothesis tests on the \\(\\beta\\)-coefficients are no longer valid. If \\(\\sigma_i^2\\) was known, the use of a Generalized Least Squares (GLS) model would be appropriate: \\[y_i = \\beta_0 + \\beta_1 \\cdot x_i + \\epsilon_i\\] Dividing both sides by the known variance: \\[\\frac{y_i}{\\sigma_i}=\\beta_0 \\cdot \\frac{1}{\\sigma_i}+\\beta_1 \\frac{x_i}{\\sigma_i}+\\frac{\\epsilon_i}{\\sigma_i}\\] If \\(\\epsilon^*_i = \\epsilon_i / \\sigma_i\\), then it can be shown that \\(Var(\\epsilon^*_i)=1\\), i.e., constant. Under the usual OLS model: \\[\\sum_{i=1}^N e_i^2=\\sum_{i=1}^N \\left(y_i-\\hat{\\beta}_0+\\hat{\\beta}_1 \\cdot x_i \\right)^2\\] Under GLS model: \\[\\sum_{i=1}^N w_i e_i^2= \\sum_{i=1}^N w_i \\left(y_i-\\hat{\\beta}_0+\\hat{\\beta}_1 \\cdot x_i \\right)^2\\] That is, GLS minimizes the weighted sum of the residual squares. Since in reality, the variance of \\(\\sigma^2\\) is not known, other techniques have to be employed to obtain so-called heteroscedasticity-consistent (HC) standard errors. But first, two tests are introduced to detect heteroscedasticity. 6.1.1 Detecting Heteroscedasticity Two test are presented to detect heteroscedasticity: Goldfeld-Quandt Test (1965) Breusch-Pagan-Godfrey Test (1979) The steps necessary for the Goldfeld-Quandt Test are as follows: Sort observations by ascending order of the dependent variable. Pick C as the number of central observations to drop in the middle of the dependent variable. Run two separate regression equations, i.e., with the lower and upper part. Compute \\[\\lambda = \\frac{RSS_2/df}{RSS_1/df}\\] \\(\\lambda\\) follows an F-distribution. The Goldfeld-Quandt Test can be illustrated with gqtestdata. In a first step, the data is separated into two groups with \\(C=6\\). In a second step, both groups are used to run a regression. And lastly, \\(\\lambda\\) is calculated. gqtestdata1 = gqtestdata[1:22,] gqtestdata2 = gqtestdata[29:50,] bhat1 = lm(price_r~sqft_r,data=gqtestdata1) bhat2 = lm(price_r~sqft_r,data=gqtestdata2) lambda = sum(bhat2$residuals^2)/sum(bhat1$residuals^2) Of course, there is also a function in R called gqtest which simplifies the procedure. library(lmtest) bhat = lm(price~sqft,data=gqtestdata) gqtest(bhat,fraction = 6) ## ## Goldfeld-Quandt test ## ## data: bhat ## GQ = 4.8709, df1 = 20, df2 = 20, p-value = 0.0004223 ## alternative hypothesis: variance increases from segment 1 to 2 In any case, the hypothesis of homoscedasticity is rejected for gqtestdata. The Breusch-Pagan-Godfrey Test is an alternative and does not rely on choosing C as the number of central observations to be dropped. The steps include the following: Run a regular OLS model and obtain the residuals. Calculate \\[\\hat{\\sigma}^2 = \\frac{\\sum_{i=1}^N e^2_i}{N}\\] Construct the variable \\(p_i\\) as follows: \\(p_i = e^2_i / \\hat{\\sigma}^2\\) Regress \\(p_i\\) on the Xs as follows \\[p_i = \\alpha_0 + \\alpha_1 \\cdot x_{i1}+\\alpha_2 \\cdot x_{i2} + \\dots\\] Obtain the explained sum of squares (ESS) and define \\(\\Theta = 0.5 \\cdot ESS\\). Then \\(\\Theta \\sim \\chi^2_{m-1}\\). The much simpler procedure is to use the function bptest() in R. library(lmtest) bhat = lm(price~sqft,data=gqtestdata) bptest(bhat) ## ## studentized Breusch-Pagan test ## ## data: bhat ## BP = 8.2672, df = 1, p-value = 0.004037 6.1.2 Correcting Heteroscedasticity To correct for heteroscedasticity, robust standard errors must be obtained. library(sandwich) bhat = lm(price~sqft,data=gqtestdata) summary(bhat) vcov = vcovHC(bhat) coeftest(bhat,vcov.=vcov) Note that there are multiple variations to calculate the standard error and thus, it is possible for slight variations among the results from different packages. \\[Var(\\hat{\\beta}_1) = \\frac{\\sum_{i=1}^N (x_i-\\bar{x})^2 e_i^2}{\\sum_{i=1}^N (x_i-\\bar{x})^2}\\] The square root of the following equation is called heteroscedastic robust standard error: \\[\\widehat{Var}(\\hat{\\beta}_j) = \\frac{\\sum_{i=1}^N \\hat{r}^2_{ij} e_i^2}{\\sum_{i=1}^N (x_i-\\bar{x})^2}\\] Standard errors can be either larger or smaller. Note that in this example, we do not know whether heteroscedasticity is present or not. "],["multicollinearity.html", "6.2 Multicollinearity", " 6.2 Multicollinearity Multicollinearity describes the situation in which two or more independent variables are linearly related. Under perfect multicollinearity: \\[\\lambda_1 x_1 + \\lambda_2 x_2 + \\dots +\\lambda_k x_k = 0\\] where \\(\\lambda_i\\) are constants that are not all zero simultaneously. For example, consider \\(x_1=\\{8,12,15,17\\}\\), \\(x_2=\\{24,36,45,51\\}\\), and \\(x_3=\\{2,3,3.75,4.25\\}\\). In this case, \\(\\lambda_1=1\\), \\(\\lambda_2=-1/5\\), and \\(\\lambda_3=2\\). Note, multicollinearity refers to linear relationships! Including a squared or cubed term is not an issue of multicollinearity. It can be shown that the variance of the estimator increases in the presence of multicollinearity. There are various indications that the data suffers from multicollinearity: High \\(R^2\\) but few significant variables Fail to reject the hypothesis for H\\(_0\\): \\(\\beta_i=0\\) based on t-values but rejection all slopes being simultaneously zero based on F-test. High correlation among explanatory variables Variation of statistically significant variables between models. 6.2.1 Variance Inflated Factors (VIF) Identifies possible correlation among multiple independent variables and not just two as in the case of a simple correlation coefficient. Consider the model: \\[y_i = \\beta_0 + \\beta_k x_{ik} + \\epsilon_i\\] The estimated variances of the coefficient \\(\\beta_k\\) is written as \\[Var(\\beta_k)^* = \\frac{\\sigma^2}{\\sum_{i=1}^N (x_{ik}-\\bar{x}_k)^2}\\] Without any multicollinearity, this variance is minimized. If some some independent variables are correlated with the independent variable \\(k\\), then \\[Var(\\beta_k) = \\frac{\\sigma^2}{\\sum_{i=1}^N (x_{ik}-\\bar{x}_k)^2} \\cdot \\frac{1}{1-R^2_k}\\] where \\(R^2_k\\) is the \\(R^2\\) if variable \\(x_k\\) is taken as the dependent variable. The VIF can be written as \\[\\frac{Var(\\beta_k)}{Var(\\beta_k)^*}=\\frac{1}{1-R^2_k}\\] If \\(VIF=1\\), then there is no relationship between the variable \\(x_k\\) and the remaining independent variables. Otherwise, \\(VIF&gt;1\\). In general, the interpretation is as follows: VIF of 4 warrants attention VIF of 10 indicates a serious problem. 6.2.2 Examples To illustrate the concept of multicollinearity, the data set from nfl is used (Berri et al. (2011)). The first model includes total salary as the dependent variable and the following independent variables: prior season passing yards, pass attempts, experience (squared) in the league, draft round pick, veteran (more than 3 years in the league), pro bowl appearance, and facial symmetry. bhat = lm(log(total)~yards+att+exp+exp2+draft1+draft2+veteran+changeteam+pbowlever+symm,data=nfl) summary(bhat) After estimating the results, the function vif() from the package car is used: library(car) vif(bhat) ## yards att exp exp2 draft1 draft2 veteran changeteam pbowlever symm ## 32.547700 30.920282 39.889877 26.715342 1.621048 1.228091 5.253525 1.194254 1.581753 1.056661 The results indicate multicollinearity for yards, att, and experience. Passings yards and attempts may be correlated and thus, one of them (att) is dropped. bhat = lm(log(total)~yards+exp+exp2+draft1+draft2+veteran+changeteam+pbowlever+symm,data=nfl) summary(bhat) vif(bhat) ## yards exp exp2 draft1 draft2 veteran changeteam pbowlever symm ## 1.460849 39.339639 26.162804 1.616171 1.227479 5.253502 1.141435 1.569621 1.052906 This improves the estimation but experience (and its squared term) are still problematic. The last estimation removes experience and the VIF terms are now in the acceptable range. bhat = lm(log(total)~yards+draft1+draft2+veteran+changeteam+pbowlever+symm,data=nfl) summary(bhat) vif(bhat) ## yards draft1 draft2 veteran changeteam pbowlever symm ## 1.406241 1.653634 1.229459 1.976506 1.101988 1.406095 1.010855 The important part is that the conclusion of the paper has not changed with regard to facial symmetry. "],["other-issues-and-problems-with-data.html", "6.3 Other Issues and Problems with Data", " 6.3 Other Issues and Problems with Data More serious problems than heteroscedasticity: Functional form mis-specification Measurement error Missing data: Estimating a standard regression model is not possible with missing values. All statistical software packages ignore missing data. Missing data is a minor problem if it is due to random error. Missing data can be problematic if it is systematically missing, e.g., missing education data for people with lower education Non-random samples Outliers "],["autocorrelation.html", "6.4 Autocorrelation", " 6.4 Autocorrelation The correlation of error terms is called autocorrelation. The issue usually arises if there is a time component in the data. Recall the main types of data available for research: Cross-sectional data (multiple observations at same time point) Time series data (one variable observed over time) Pooled data (multiple observations at different time points) Panel data (same observations at different time points) There is a distinction between serial correlation and autocorrelation: Serial correlation: Correlation between two series Autocorrelation: Correlation with lagged variables The OLS estimator is still unbiased but there is no longer minimum variance since \\(E(\\epsilon_i \\epsilon_j) \\neq 0\\). Autocorrelation is unlikely for cross-sectional data except in the case of spatial auto-correlation. One cause of autocorrelation could be inertia in economic variables. For example, variables such as income, production, or employment increase after a recession. But there are a number of other reasons for autocorrelation. Autocorrelation could be caused by specification bias due to excluded variables or incorrect functional forms. For example, assume that the correct equation is \\[q_{beef}=\\beta_0+\\beta_1 \\cdot p_{beef}+\\beta_2 \\cdot p_{income} + \\beta_3 \\cdot p_{pork}+\\epsilon_t\\] The estimated equation is: \\[q_{beef}=\\beta_0+\\beta_1 \\cdot p_{beef}+\\beta_2 \\cdot p_{income}+\\upsilon_t\\] The error terms in both equations are denoted \\(\\epsilon_t\\) and \\(\\upsilon_t\\), respectively. This results in a systematic patters of \\(\\upsilon_t\\): \\[\\upsilon_t= \\beta_3 \\cdot p_{pork}+\\epsilon_t\\] Correlation between the error terms can also be caused by specifying an incorrect functional form. Assume that the correct equation is written as follows: \\[y_i = \\beta_0 +\\beta_1 \\cdot x_i +\\beta_2 \\cdot x_i^2 +\\epsilon_i\\] But the estimated equation is \\[y_i = \\beta_0 +\\beta_1 x_i +\\epsilon_i\\] Serial correlation is caused by lagged terms in the regression equation: \\[consumption_t = \\beta_0 + \\beta_1 \\cdot income_t+\\beta_3 \\cdot consumption_{t-1}+\\epsilon_t\\] The issues of lagged terms will be covered in the part on dynamic regression and time series and this section serves only as an introduction to first-order autoregressive schemes. Consider the model: \\[y_t=\\beta_0+\\beta_1 \\cdot x_t + \\upsilon_t\\] Assume the following form of \\(\\upsilon\\): \\[\\upsilon_t = \\rho \\cdot \\upsilon_{t-1} + \\epsilon_t\\] his is called a first-order autoregressive AR(1) scheme. An AR(2) would be written as \\[\\upsilon_t = \\rho_1 \\cdot \\upsilon_{t-1} + \\rho_2 \\cdot \\upsilon_{t-2} + \\epsilon_t\\] This can be illustrated with simulated data. Consider the following model: \\[y_t=1+0.8 \\cdot x_t + \\upsilon_t\\] and assume the following form of \\(\\upsilon\\): \\[\\upsilon_t = 0.7 \\cdot \\upsilon_{t-1} + \\epsilon_t\\] 1. Simulate the above model 100 times 2. Compare variance of coefficients under different two different methods: (1) OLS and (2) Cochrane-Orcutt 6.4.1 Durbin Watson d-Test The test statistic of the Durbin-Watson test is written as: \\[d=\\frac{\\sum_{t=2}^N (e_t-e_{t-1})^2}{\\sum_{t=1}^N e_t^2}\\] Assumptions underlying the test are No intercept AR(1) process, i.e., \\(\\upsilon_t = \\rho \\upsilon_{t-1} + \\epsilon_t\\) No lagged independent variables Original papers derive lower (\\(d_L\\)) and upper (\\(d_U\\)) bounds, i.e., critical values, that depend on \\(N\\) and \\(k\\) only. \\(d \\approx 2 \\cdot (1-\\rho)\\) and since \\(-1 \\leq \\rho \\leq 1\\), we have \\(0 \\leq d \\leq 4\\). Rule of thumb indicates that \\(d=2\\) signals no problems. 6.4.2 Breusch-Godfrey Test Consider the following model \\(y_t = \\beta_0 + \\beta_1 x_t + \\upsilon_t\\) with the following error term structure: \\[\\upsilon_t = \\rho_1 \\upsilon_{t-1} + \\rho_2 \\upsilon_{t-2} + \\dots + \\rho_p \\upsilon_{t-p} + \\epsilon_t\\] The null hypothesis for the test is expressed as follows: \\(H_0\\): \\(\\rho_1 = \\rho_2 = \\dots = \\rho_p =0\\) When the following regression is executed: \\[\\hat{\\upsilon}_t = \\alpha_0 + \\alpha_1 \\cdot x_t + \\hat{\\rho}_1 \\cdot \\hat{\\upsilon}_{t-1} + \\hat{\\rho}_2 \\cdot \\hat{\\upsilon}_{t-2} + \\dots + \\hat{\\rho}_p \\cdot \\hat{\\upsilon}_{t-p} + \\epsilon_t\\] Then \\[(n-p) \\cdot R^2 \\sim \\chi^2_p\\] "],["exercises-1.html", "6.5 Exercises", " 6.5 Exercises WDI and Heteroscedasticity: Using the data in wdi, estimate the following equation for the year 2018 and report the results: \\[\\begin{equation*} fertrate = \\beta_0 + \\beta_1 \\cdot gdp+ \\beta_2 \\cdot litrate \\end{equation*}\\] The variable represents fertility rate (birth per woman), represents the GDP per capita in in real terms, and is the literacy rate. Indy Homes: The data indyhomes contains home values of two ZIP codes in Indianapolis. The model estimates the home value (dependent variable) based on a set of independent variables. The variables levels and garage refers to the number of stories and garage spots, respectively. The remaining variables are self-explanatory. Create a dummy variable called northwest for the 46268 ZIP code. Report and interpret the results of the following regression equation: \\[\\ln(price)=\\beta_0+\\beta_1 \\cdot \\ln(sqft)+\\beta_2 \\cdot northwest+\\beta_3 \\cdot \\ln(lot)+\\beta_4 \\cdot bed+\\beta_5 \\cdot garage+\\beta_6 \\cdot levels+\\beta_7 \\cdot northwest \\cdot levels\\] What is the expected home value of a house in the 46228 ZIP code area with the following characteristics: 1900 sqft, 0.65 acres lot, 3 bedrooms, 3 bathrooms, 2 garage spots, and 2 story. Conduct a Breusch-Pagan-Godfrey test for heteroscedasticity. What do you conclude? Estimate the above model with heteroscedasticity-consistent (HC) standard errors. What changes compared to the model from Part b? WDI and Multicollinearity: Use the command subset() on the WDI data and to select the variables fertrate, gdp, litrate, lifeexp, and mortrate for the year 2015. Estimate the following model \\[fertrate=\\beta_0+\\beta_1 \\cdot gdp+\\beta_2 \\cdot litrate+\\beta_3 \\cdot lifeexp+\\beta_4 \\cdot mortrate\\] Interpret the results. What do you conclude in terms of statistical significance and the value of \\(R^2\\)? Use the function vif from the package car. What can you say about the issue of multicollinearity in this case? Correct the issue of multicollinearity by adjusting your model. In this exercise, you will estimate the per-capita pork demand as a function of pork prices and the prices of substitutes (beef and chicken) as well as real disposable income. Estimate the following equation and interpret the coefficients. Are the signs of the coefficients what you would expect? \\[\\begin{equation*} \\ln(q_{pork}) = \\beta_0 + \\beta_1 \\cdot \\ln(p_{pork}) + \\beta_2 \\cdot \\ln(p_{chicken}) + \\beta_3 \\cdot \\ln(p_{beef}) + \\beta_4 \\cdot \\ln(rdi) \\end{equation*}\\] "],["binary-choice.html", "7 Binary Choice", " 7 Binary Choice Binary choice models are part of a large class of so-called qualitative choice models which are used for qualitative dependent variables. Consider the following outcomes of interest: Is a person in the labor force? Will an individual vote yes on a particular issue? Did a person watch the last Super Bowl? Have you purchased a new car in the past year Did you do any charitable contributions in the past year? Did you vote during the last election? Does an individual recidivate after being released from prison? For those questions, the dependent variable is either 0 (no) or 1 (yes). For binary choice models, the outcome is interpreted as a probability, i.e., what is the probability of a person to answer yes to those questions. In the next chapter, the model is expanded to consider more than binary outcomes. Those models include categorical dependent variable that are either naturally ordered or have no ordering. Examples of naturally ordered categorical variables are: Level of happiness: Very happy, happy, ok, or sad. Intention to get a COIVID-19 vaccine: Definitely yes, probably yes, probably no, or definitely no Two examples about categorical dependent variable which have no ordering are: Commute to campus: Bike, car, walk, or bus Voter registration: Democrat, Republican, or independent For all those models, the outcome of interest is the probability to fall into a particular category. For binary choice models which are considered in this chapter, the outcome of interest is the probability to fall into the 1 (yes) category. For binary choice models, y takes one of two values: 0 or 1. And the model will specify \\(Pr(y=1|x)\\) where x are the independent variables. Consider the decision to purchase organic food. Assume that you have data about the income of respondents as well as information if they purchase organic food. The purchase decision (yes or no) is on the vertical axis and the income is on the horizontal axis. Remember that the probability has be bounded between 0 and 1. Hence, we need to find a function \\(G(z)\\) such that \\(0 \\leq G(z) \\leq 1\\) for all values of \\(z\\) and \\(P(y=1|x)=G(z)\\). Popular choices for \\(G(z)\\) are the cumulative normal distribution function (Probit Model) and the logistic function (Logit Model). For what follows, let \\(z=\\beta_0+\\beta_1 \\cdot x_1 + \\cdots + \\beta_k \\cdot x_k\\). For the probit model, \\(G(z)\\) is written as \\[Pr(y = 1) = G(z)=\\Phi(z)\\] where \\(\\Phi\\) represents the cumulative normal. And for the logit model, \\(G(z)\\) is written as \\[Pr(y = 1) = G(z)=\\frac{e^z}{1+e^z}=\\frac{1}{1+e^{-z}}\\] The interpretation of the logit and probit estimates is not as straightforward as in the multivariate regression case. In general, we care about the effect of \\(x\\) on \\(P(y=1|x)\\). The sign of the coefficient shows the direction of the change in probability. The approximation to the marginal effect if \\(x\\) is roughly continuous: \\[\\Delta P(y=1|x) \\approx g(\\hat{\\beta}_0 + x \\cdot \\hat{\\beta}) \\cdot \\beta_j \\cdot \\Delta x_j\\] To obtain the marginal effects in R, an additional step is necessary. Let us illustrate the binary choice model using the data set organic and a logit model. The results of interest for the binary choice model are the (1) coefficient estimates, (2) marginal effects, and (3) predicted probabilities. "],["binary-choice-estimation-in-r.html", "7.1 Binary Choice Estimation in R", " 7.1 Binary Choice Estimation in R There are (at least) two possibilities to obtain the coefficient estimates in R. The first is using the built in R command glm(): bhat_glm_logit = glm(buying~income,family=binomial(link=&quot;logit&quot;),data=organic) summary(bhat_glm_logit) ## ## Call: ## glm(formula = buying ~ income, family = binomial(link = &quot;logit&quot;), ## data = organic) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.8451 -0.5293 -0.1423 0.4093 1.9154 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -5.87557 1.13842 -5.161 2.45e-07 *** ## income 0.11709 0.02247 5.211 1.87e-07 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 138.469 on 99 degrees of freedom ## Residual deviance: 70.931 on 98 degrees of freedom ## AIC: 74.931 ## ## Number of Fisher Scoring iterations: 6 Note that interpretation of the coefficients is slightly different from the regular linear model. The sign of the coefficient estimate for income is interpreted as the direction in which the probability changes. In this case, the coefficient is positive and thus, an increase (decrease) in income leads to an increase (decrease) in the probability of purchasing organic food. In addition, the coefficients are statistically significant. As aforementioned, the coefficients do not indicate the marginal effects though. To calculate the marginal effects, a slightly different approach is necessary. Let us first look at the second approach of obtaining the coefficient estimates and the R package mfx is required to do so. ## Loading required package: betareg bhat = logitmfx(buying~income,data=organic) summary(bhat$fit) ## ## Call: ## glm(formula = formula, family = binomial(link = &quot;logit&quot;), data = data, ## start = start, control = control, x = T) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.8451 -0.5293 -0.1423 0.4093 1.9154 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -5.87557 1.13842 -5.161 2.45e-07 *** ## income 0.11709 0.02247 5.211 1.87e-07 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 138.469 on 99 degrees of freedom ## Residual deviance: 70.931 on 98 degrees of freedom ## AIC: 74.931 ## ## Number of Fisher Scoring iterations: 6 The results are identical as before using the but the command allows for the calculation of the marginal effects as well. This is done with the command the bhat\\$mfxest. bhat$mfxest ## dF/dx Std. Err. z P&gt;|z| ## income 0.02919553 0.005634262 5.181785 2.197728e-07 It is important to note that the marginal effects are taken at the mean of the independent variables. To calculate the marginal effects at specific points, the command margins() must be used. Before, we used the command glm() to calculate the logit coefficients. The reason for using the glm() is that it allows us to calculate the predicted probabilities. Consider the example to purchase organic food and assume that there are three new respondents with income levels $25,000, $50,000, and $75,000. To predict the probability of those individuals purchasing organic food, the following functions can be used: datablock = data.frame(income=c(25,50,75)) predict(bhat_glm_logit,newdata=datablock,type=&quot;response&quot;) ## 1 2 3 ## 0.0498116 0.4946870 0.9481377 "],["additional-examples-and-probit-model.html", "7.2 Additional Examples and Probit Model", " 7.2 Additional Examples and Probit Model Here are two additional examples on working full-time and voting behavior. Both examples use the gss2018 data. Note that the previous chapter have introduced the logit model. To estimate a Probit model, the term logit has to be replaced with probit. The results are almost identical. The variables are defined as follows: \\(fulltime\\): Does the respondent work full time. \\(government\\): Does the respondent work for the government \\(education\\): Less than high school (0), high school (1), associate/junior college (2), bachelor (3), and graduate (4) \\(vote\\): Voted in the 2016 election \\(married\\), \\(age\\), \\(childs\\), and \\(income\\) are self-explanatory. Income is for 2016. 7.2.1 Full-Time Work equation = c(&quot;fulltime~age+childs+government+education+married&quot;) bhat_glm = glm(equation,family=binomial(link=&quot;logit&quot;),data=gss2018) summary(bhat_glm) ## ## Call: ## glm(formula = equation, family = binomial(link = &quot;logit&quot;), data = gss2018) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.3019 0.4298 0.5638 0.6692 0.9954 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 1.877519 0.335655 5.594 2.22e-08 *** ## age -0.021941 0.006985 -3.141 0.00168 ** ## childs -0.015773 0.063675 -0.248 0.80435 ## government 0.323365 0.272825 1.185 0.23592 ## education 0.264400 0.086471 3.058 0.00223 ** ## married 0.353223 0.205331 1.720 0.08539 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 724.91 on 771 degrees of freedom ## Residual deviance: 699.31 on 766 degrees of freedom ## AIC: 711.31 ## ## Number of Fisher Scoring iterations: 4 bhat = logitmfx(equation,data=gss2018) summary(bhat$fit) ## ## Call: ## glm(formula = formula, family = binomial(link = &quot;logit&quot;), data = data, ## start = start, control = control, x = T) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.3019 0.4298 0.5638 0.6692 0.9954 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 1.877519 0.335655 5.594 2.22e-08 *** ## age -0.021941 0.006985 -3.141 0.00168 ** ## childs -0.015773 0.063675 -0.248 0.80435 ## government 0.323365 0.272825 1.185 0.23592 ## education 0.264400 0.086471 3.058 0.00223 ** ## married 0.353223 0.205331 1.720 0.08539 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 724.91 on 771 degrees of freedom ## Residual deviance: 699.31 on 766 degrees of freedom ## AIC: 711.31 ## ## Number of Fisher Scoring iterations: 4 bhat_glm = glm(equation,family=binomial(link=&quot;probit&quot;),data=gss2018) summary(bhat_glm) ## ## Call: ## glm(formula = equation, family = binomial(link = &quot;probit&quot;), data = gss2018) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.3240 0.4189 0.5671 0.6720 0.9792 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 1.087820 0.187423 5.804 6.47e-09 *** ## age -0.011979 0.003992 -3.001 0.00269 ** ## childs -0.008966 0.036310 -0.247 0.80496 ## government 0.172189 0.148316 1.161 0.24566 ## education 0.154238 0.047653 3.237 0.00121 ** ## married 0.196650 0.114850 1.712 0.08686 . ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 724.91 on 771 degrees of freedom ## Residual deviance: 699.29 on 766 degrees of freedom ## AIC: 711.29 ## ## Number of Fisher Scoring iterations: 5 7.2.2 Voting Behavior equation = c(&quot;vote~age+childs+government+education+married+income&quot;) bhat_glm = glm(equation,family=binomial(link=&quot;logit&quot;),data=gss2018) summary(bhat_glm) ## ## Call: ## glm(formula = equation, family = binomial(link = &quot;logit&quot;), data = gss2018) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.3291 -1.0702 0.5551 0.8683 1.6618 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.924e+00 2.983e-01 -6.449 1.13e-10 *** ## age 4.145e-02 6.944e-03 5.970 2.37e-09 *** ## childs -7.944e-02 5.677e-02 -1.399 0.162 ## government 4.536e-01 2.325e-01 1.951 0.051 . ## education 4.923e-01 8.326e-02 5.913 3.36e-09 *** ## married 1.282e-01 1.779e-01 0.721 0.471 ## income 2.039e-06 2.470e-06 0.826 0.409 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 978.09 on 771 degrees of freedom ## Residual deviance: 858.90 on 765 degrees of freedom ## AIC: 872.9 ## ## Number of Fisher Scoring iterations: 4 bhat = logitmfx(equation,data=gss2018) summary(bhat$fit) ## ## Call: ## glm(formula = formula, family = binomial(link = &quot;logit&quot;), data = data, ## start = start, control = control, x = T) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.3291 -1.0702 0.5551 0.8683 1.6618 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.924e+00 2.983e-01 -6.449 1.13e-10 *** ## age 4.145e-02 6.944e-03 5.970 2.37e-09 *** ## childs -7.944e-02 5.677e-02 -1.399 0.162 ## government 4.536e-01 2.325e-01 1.951 0.051 . ## education 4.923e-01 8.326e-02 5.913 3.36e-09 *** ## married 1.282e-01 1.779e-01 0.721 0.471 ## income 2.039e-06 2.470e-06 0.826 0.409 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 978.09 on 771 degrees of freedom ## Residual deviance: 858.90 on 765 degrees of freedom ## AIC: 872.9 ## ## Number of Fisher Scoring iterations: 4 bhat_glm = glm(equation,family=binomial(link=&quot;probit&quot;),data=gss2018) summary(bhat_glm) ## ## Call: ## glm(formula = equation, family = binomial(link = &quot;probit&quot;), data = gss2018) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.3910 -1.0777 0.5492 0.8754 1.6541 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -1.167e+00 1.771e-01 -6.589 4.43e-11 *** ## age 2.527e-02 4.055e-03 6.232 4.60e-10 *** ## childs -4.884e-02 3.411e-02 -1.432 0.1522 ## government 2.722e-01 1.359e-01 2.003 0.0452 * ## education 2.949e-01 4.830e-02 6.106 1.02e-09 *** ## married 8.745e-02 1.062e-01 0.824 0.4101 ## income 1.132e-06 1.435e-06 0.789 0.4302 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 978.09 on 771 degrees of freedom ## Residual deviance: 857.62 on 765 degrees of freedom ## AIC: 871.62 ## ## Number of Fisher Scoring iterations: 4 "],["exercises-2.html", "7.3 Exercises", " 7.3 Exercises Consider the problem of choosing whether or not to purchase a hybrid vehicle (e.g., the Toyota Prius, Honda Civic Hybrid, Ford Escape). As an analyst, you assume that whether or not an individual purchases a hybrid depends upon the current price of gasoline (gas), the difference in purchase price of a hybrid vehicle compared to a comparably equipped vehicle (increment), college education which is represented by a dummy variable that equals 1 if individual has completed college and equals 0 otherwise (\\(college\\)), and a dummy variable that equals 1 if the individual is a member of an environmental organization, e.g., Nature Conservancy, National Audubon Society, (env). Answer the following questions contained in hybrid: Provide summary statistics (i.e., mean, minimum, and maximum) for each variables. Estimate a regression model that allows to calculate the probability that a person would buy a hybrid. Using your parameter estimates, compute the probability that the following ``types of individuals will buy a hybrid: Type I: gasoline price = 2.50; difference in purchase price = 1,500; college = 0; and member of an environmental organization = 0 Type II: gasoline price = 3.50; difference in purchase price = 500; college = 1; and member of an environmental organization = 1 Type III: gasoline price = 3.00; difference in purchase price = 1,000; college = 1; and member of an environmental organization = 0 Given the above probabilities, calculate the marginal effect that gasoline prices have on the probability that each of the three ``types of individuals will purchase a hybrid vehicle. Given the above probabilities, calculate the marginal effect that joining an environmental group on Type I and Type III individuals. EV Data: Using the , estimate a logit model which calculates the probability that a consumer would purchase a hybrid (choice=2), plug-in hybrid (choice=3), or electric vehicle (choice=4) as opposed to a gasoline car (choice=1). In a first step, you should create a new variable that is equal to 0 if the person purchases a gasoline vehicle and is equal to 1 for everything else. Include the following independent variables in your model: \\(age\\), \\(numcars\\), \\(politics\\), \\(female\\), \\(edu\\), and \\(income\\). We are interested in the determinants of voting based on data from the General Social Survey (GSS). The following variables are hypothesized to be a determinant of voting behavior: \\(age\\), \\(income\\), \\(gun ownership\\) (yes=1), \\(stance on death penalty\\) (in favor=1), and \\(education level\\) (higher number is associated with a higher education level). Run a probit and logit model and report the results. Calculate the marginal probabilities. \\end{enumerate} "],["qualitative-choice-models.html", "8 Qualitative Choice Models", " 8 Qualitative Choice Models The packages required for this section are mlogit, erer, MASS, AER, glmmML, and nnet. The files required are fpdata and evdata. Additional files that are required are part of the packages mlogit and AER. Those datasets are called Fishing and TravelMode. You can lode them into R with the following commands: data(\"Fishing\",package=\"mlogit\") data(\"TravelMode\",package=\"AER\") There is also a YouTube Video associated with this chapter. The last chapter has introduced binary choice models that answer questions such as: Did you vote during the last election? Does an individual recidivate after being released from prison? In this chapter, cases of dependent variables with more than two categories are considered. The categorical dependent variables can be with or without natural ordering. Here are some examples of natural ordering: Level of happiness: Very happy, happy, okay, or sad Intent to get vaccinated: Definitely yes, probably yes, probably no, definitely no Examples without natural ordering: Type of car to purchase: Passenger car, Pick-up truck, van, convertible "],["ordered-logit-model.html", "8.1 Ordered Logit Model", " 8.1 Ordered Logit Model 8.1.1 Theoretical Aspects Assumption: Latent variable \\(y^*\\) that is unobserved by the researcher: \\[y_i^* = \\beta_0+\\beta_1 \\cdot x_i + \\epsilon_i\\] In the case of a health model, this may be a measure of healthiness. What the researcher does measure is an \\(m\\)-alternative ordered model: \\[y_i = j \\quad \\text{if} \\quad \\alpha_{j-1} &lt; y_i^* \\leq \\alpha_j \\quad \\text{for} \\quad j=1, \\dots,m\\] where \\(\\alpha_0 = - \\infty\\) and \\(\\alpha_m=\\infty\\). In this case, we have \\[ \\begin{align*} Pr(y_1 = j) &amp;=Pr(\\alpha_{j-1} &lt; y_i^* \\leq \\alpha_j)\\\\ &amp;=Pr(\\alpha_{j-1} &lt; \\beta_0+\\beta_1 x_i + \\epsilon_i \\leq \\alpha_j)\\\\ &amp;=Pr(\\alpha_{j-1}- \\beta_0-\\beta_1 x_i &lt; \\epsilon_i \\leq \\alpha_j - \\beta_0-\\beta_1 x_i)\\\\ &amp;=F(\\alpha_j - \\beta_0-\\beta_1 x_i)-F(\\alpha_{j-1} - \\beta_0-\\beta_1 x_i) \\end{align*}\\] For the ordered logit: \\(F(z)=exp(z)/(1+exp(z))\\). Cut-off example points as \\(\\alpha_0 = -\\infty\\), \\(\\alpha_2 = -1.5\\), \\(\\alpha_3 = 2\\), and \\(\\alpha_4 = \\infty\\) 8.1.2 Ordered Logit Example: Organic Food Purchase Survey on the purchase frequency of organic tomatoes and organic strawberries fpdata.csv: Never (1), rarely (2), once per month (3), every 2 weeks (4), 1-2 times a week (5), almost daily (6) Independent variables are -Age and female - Education: High school (1), some college (2), bachelor (3), master (4), technical school diploma (5), doctorate (6) fpdata$strawberries_org = as.factor(fpdata$strawberries_org) strawdata = fpdata[c(&quot;strawberries_org&quot;,&quot;age&quot;,&quot;education&quot;,&quot;female&quot;,&quot;kidsunder12&quot;)] strawdata = na.omit(strawdata) bhat = polr(strawberries_org~age+education+female+kidsunder12,data=strawdata,Hess=TRUE) summary(bhat) ## Call: ## polr(formula = strawberries_org ~ age + education + female + ## kidsunder12, data = strawdata, Hess = TRUE) ## ## Coefficients: ## Value Std. Error t value ## age -0.02034 0.009838 -2.0676 ## education 0.01596 0.112028 0.1425 ## female -0.41533 0.280485 -1.4808 ## kidsunder12 0.28560 0.321778 0.8876 ## ## Intercepts: ## Value Std. Error t value ## 0|1 -1.4958 0.6497 -2.3022 ## 1|2 -0.4381 0.6434 -0.6810 ## 2|3 0.2084 0.6394 0.3259 ## 3|4 0.8352 0.6442 1.2964 ## 4|5 1.6314 0.6699 2.4353 ## ## Residual Deviance: 526.4547 ## AIC: 544.4547 For the organic purchases data, the cuts are under Intercepts and thus, we have (rounded coefficients): \\[z = -0.020 \\cdot age +0.0160 \\cdot education -0.415 \\cdot female +0.286 \\cdot kidsunder12\\] The cutoff points can be interpreted as follows: \\[\\begin{align*} Pr(y=1) &amp;= P(z+\\epsilon_i \\leq -1.4958)\\\\ Pr(y=2) &amp;= P(-1.4958 &lt; z+\\epsilon_i \\leq -0.4381)\\\\ Pr(y=3) &amp;= P(-0.4381 &lt; z+\\epsilon_i \\leq 0.2084)\\\\ Pr(y=4) &amp;= P(0.2084 &lt; z+\\epsilon_i \\leq 0.8352)\\\\ Pr(y=4) &amp;= P(0.8352 &lt; z+\\epsilon_i \\leq 1.6314)\\\\ Pr(y=6) &amp;= P(1.6314 \\leq z+\\epsilon_i ) \\end{align*}\\] In order to get the \\(p\\)-values displayed in the output, you have to execute two additional steps: bhat.coef = data.frame(coef(summary(bhat))) bhat.coef$pval = round((pnorm(abs(bhat.coef$t.value), lower.tail = FALSE) * 2),2) bhat.coef ## Value Std..Error t.value pval ## age -0.02034185 0.009838336 -2.0676110 0.04 ## education 0.01595914 0.112027882 0.1424569 0.89 ## female -0.41533145 0.280485372 -1.4807598 0.14 ## kidsunder12 0.28560319 0.321777883 0.8875787 0.37 ## 0|1 -1.49575271 0.649708891 -2.3021891 0.02 ## 1|2 -0.43813109 0.643390358 -0.6809724 0.50 ## 2|3 0.20839939 0.639383205 0.3259382 0.74 ## 3|4 0.83515493 0.644195302 1.2964313 0.19 ## 4|5 1.63135404 0.669870994 2.4353257 0.01 8.1.3 Predicted Probability and Marginal Effects The predicted probability for each observation can be obtained using the command predict(bhat,type=\"probs\") assuming that the output of the polr command is stored in bhat. bhat.pred = predict(bhat, type=&quot;probs&quot;) x = ocME(bhat) x$out$ME.all ## effect.0 effect.1 effect.2 effect.3 effect.4 effect.5 ## age 0.005 0.000 -0.001 -0.001 -0.001 -0.001 ## education -0.004 0.000 0.001 0.001 0.001 0.001 ## female 0.098 -0.003 -0.023 -0.024 -0.023 -0.026 ## kidsunder12 -0.067 0.001 0.015 0.017 0.016 0.018 "],["multinomial-logit-and-multinomial-probit-models.html", "8.2 Multinomial Logit and Multinomial Probit Models", " 8.2 Multinomial Logit and Multinomial Probit Models Revealed preferences: Observed choices of individuals Stated preference Hypothetical choice situations Economists modeling of choice Utility/happiness/satisfaction associated with multiple choice situations 8.2.1 Theoretical Aspects Travel choice model dependent on cost (\\(x\\)) and time (\\(z\\)): \\[V_j = \\alpha_j + \\beta_1 \\cdot x_j + \\beta_2 \\cdot z_j\\] Probability of choosing alternative \\(j\\) (assuming three choices) \\[\\begin{align*} P(1) &amp;= \\frac{e^{V_1}}{e^{V_1}+e^{V_2}+e^{V_3}}\\\\ P(2) &amp;= \\frac{e^{V_2}}{e^{V_1}+e^{V_2}+e^{V_3}}\\\\ P(3) &amp;= \\frac{e^{V_3}}{e^{V_1}+e^{V_2}+e^{V_3}} \\end{align*}\\] Note that \\(P(1)+P(2)+P(3) = 1\\) 8.2.2 Data Managment Long shape One row for each alternative Wide shape One row for each choice situation There are some very good resources on data management and the package in general: Estimation of Random Utility Models in R: The mlogit Package Fishing (wide format) Fishing modes: beach, pier, private, and charter Alternative-specific variables: price and catch Individual-specific variables: income Suitability of the ``wide format to store individual-specific variables The R parameter varying designates alternative specific variables Travel Mode (long format) Travel Mode Choice Data mlogit.data(travelmode,choice=\"choice\",shape=\"long\", alt.levels=c(\"air\",\"train\",\"bus\",\"car\")) 8.2.3 Fishing Data data(&quot;Fishing&quot;,package=&quot;mlogit&quot;) fishing = mlogit.data(Fishing,shape=&quot;wide&quot;,varying=2:9,choice=&quot;mode&quot;) bhat = mlogit(mode~0|income,fishing) summary(bhat) ## ## Call: ## mlogit(formula = mode ~ 0 | income, data = fishing, method = &quot;nr&quot;) ## ## Frequencies of alternatives:choice ## beach boat charter pier ## 0.11337 0.35364 0.38240 0.15059 ## ## nr method ## 4 iterations, 0h:0m:0s ## g&#39;(-H)^-1g = 8.32E-07 ## gradient close to zero ## ## Coefficients : ## Estimate Std. Error z-value Pr(&gt;|z|) ## (Intercept):boat 7.3892e-01 1.9673e-01 3.7560 0.0001727 *** ## (Intercept):charter 1.3413e+00 1.9452e-01 6.8955 5.367e-12 *** ## (Intercept):pier 8.1415e-01 2.2863e-01 3.5610 0.0003695 *** ## income:boat 9.1906e-05 4.0664e-05 2.2602 0.0238116 * ## income:charter -3.1640e-05 4.1846e-05 -0.7561 0.4495908 ## income:pier -1.4340e-04 5.3288e-05 -2.6911 0.0071223 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Log-Likelihood: -1477.2 ## McFadden R^2: 0.013736 ## Likelihood ratio test : chisq = 41.145 (p.value = 6.0931e-09) fishing.fitted = fitted(bhat,outcome=FALSE) effects(bhat,covariate =&quot;income&quot;) ## beach boat charter pier ## 7.496226e-08 3.259851e-05 -1.201366e-05 -2.065981e-05 bhat = mlogit(mode~catch+price|income,data=fishing) summary(bhat) ## ## Call: ## mlogit(formula = mode ~ catch + price | income, data = fishing, ## method = &quot;nr&quot;) ## ## Frequencies of alternatives:choice ## beach boat charter pier ## 0.11337 0.35364 0.38240 0.15059 ## ## nr method ## 7 iterations, 0h:0m:0s ## g&#39;(-H)^-1g = 1.37E-05 ## successive function values within tolerance limits ## ## Coefficients : ## Estimate Std. Error z-value Pr(&gt;|z|) ## (Intercept):boat 5.2728e-01 2.2279e-01 2.3667 0.0179485 * ## (Intercept):charter 1.6944e+00 2.2405e-01 7.5624 3.952e-14 *** ## (Intercept):pier 7.7796e-01 2.2049e-01 3.5283 0.0004183 *** ## catch 3.5778e-01 1.0977e-01 3.2593 0.0011170 ** ## price -2.5117e-02 1.7317e-03 -14.5042 &lt; 2.2e-16 *** ## income:boat 8.9440e-05 5.0067e-05 1.7864 0.0740345 . ## income:charter -3.3292e-05 5.0341e-05 -0.6613 0.5084031 ## income:pier -1.2758e-04 5.0640e-05 -2.5193 0.0117582 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Log-Likelihood: -1215.1 ## McFadden R^2: 0.18868 ## Likelihood ratio test : chisq = 565.17 (p.value = &lt; 2.22e-16) fishing.fitted = fitted(bhat,outcome=FALSE) effects(bhat,covariate=&quot;income&quot;) ## beach boat charter pier ## -7.214167e-07 3.176132e-05 -2.173392e-05 -9.305980e-06 rm(bhat,Fishing,fishing,fishing.fitted) 8.2.4 Travel Data data(&quot;TravelMode&quot;,package=&quot;AER&quot;) travelmode = mlogit.data(TravelMode,choice=&quot;choice&quot;,shape=&quot;long&quot;,alt.var=&quot;mode&quot;) bhat = mlogit(choice~gcost+wait|income+size,data=travelmode,reflevel=&quot;car&quot;) summary(bhat) ## ## Call: ## mlogit(formula = choice ~ gcost + wait | income + size, data = travelmode, ## reflevel = &quot;car&quot;, method = &quot;nr&quot;) ## ## Frequencies of alternatives:choice ## car air train bus ## 0.28095 0.27619 0.30000 0.14286 ## ## nr method ## 5 iterations, 0h:0m:0s ## g&#39;(-H)^-1g = 1.66E-07 ## gradient close to zero ## ## Coefficients : ## Estimate Std. Error z-value Pr(&gt;|z|) ## (Intercept):air 7.8736084 0.9868475 7.9785 1.554e-15 *** ## (Intercept):train 5.5592051 0.6991387 7.9515 1.776e-15 *** ## (Intercept):bus 4.4331916 0.7783339 5.6957 1.228e-08 *** ## gcost -0.0196850 0.0054015 -3.6444 0.0002680 *** ## wait -0.1015659 0.0112306 -9.0436 &lt; 2.2e-16 *** ## income:air 0.0040710 0.0127247 0.3199 0.7490196 ## income:train -0.0551849 0.0144824 -3.8105 0.0001387 *** ## income:bus -0.0233237 0.0162973 -1.4311 0.1523914 ## size:air -1.0274229 0.2656569 -3.8675 0.0001100 *** ## size:train 0.3023954 0.2256155 1.3403 0.1801437 ## size:bus -0.0300096 0.3339774 -0.0899 0.9284023 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Log-Likelihood: -177.45 ## McFadden R^2: 0.37463 ## Likelihood ratio test : chisq = 212.61 (p.value = &lt; 2.22e-16) tavel.fitted = fitted(bhat,outcome=FALSE) 8.2.5 Electric Vehicle Data spendongas (Gasoline expenditure per month in $): 0-74 (1), 75-149 (2), 150-249 (3), 250-349 (4), 350-449 (5), 450-599 (6), and above 600 (7) politics (Political position): Extremely liberal (1), liberal (2), slightly liberal (3), moderate (4), slightly conservative (5), conservative (6), and extremely conservative (7) Education: Less than HS (1), HS/GED (2), some college (3), 2-year college degree (4), 4-year college degree (5), or graduate school (6) Income (1,000 \\$): Under 15 (1), 15 \\(&lt;\\) 25 (2), 25 \\(&lt;\\) 35 (3), 35 \\(&lt;\\) 50 (4), 50 \\(&lt;\\) 75 (5), 75 \\(&lt;\\) 100 (6), 100 \\(&lt;\\) 150 (7), 150 \\(&lt;\\) 200 (8), 200 \\(&lt;\\) 250 (9), \\(&gt;\\) 250 (10) evdata = mlogit.data(evdata,shape=&quot;wide&quot;,choice=&quot;choice&quot;) bhat = mlogit(choice~0|age+female+level2+numcars+edu+income+politics,data=evdata) summary(bhat) ## ## Call: ## mlogit(formula = choice ~ 0 | age + female + level2 + numcars + ## edu + income + politics, data = evdata, method = &quot;nr&quot;) ## ## Frequencies of alternatives:choice ## 1 2 3 4 ## 0.419355 0.265233 0.225806 0.089606 ## ## nr method ## 5 iterations, 0h:0m:0s ## g&#39;(-H)^-1g = 0.000603 ## successive function values within tolerance limits ## ## Coefficients : ## Estimate Std. Error z-value Pr(&gt;|z|) ## (Intercept):2 0.11810109 0.60622429 0.1948 0.8455384 ## (Intercept):3 0.90653782 0.63856959 1.4196 0.1557130 ## (Intercept):4 0.34528552 0.84542368 0.4084 0.6829675 ## age:2 -0.01298148 0.00731409 -1.7749 0.0759210 . ## age:3 -0.04216613 0.00867889 -4.8585 1.183e-06 *** ## age:4 -0.02314160 0.01139425 -2.0310 0.0422561 * ## female:2 0.17935742 0.21591603 0.8307 0.4061537 ## female:3 -0.02781447 0.23732560 -0.1172 0.9067019 ## female:4 0.00019196 0.32364088 0.0006 0.9995267 ## level2:2 0.13808856 0.25338230 0.5450 0.5857665 ## level2:3 0.87829370 0.25462065 3.4494 0.0005618 *** ## level2:4 1.14103750 0.33905869 3.3653 0.0007646 *** ## numcars:2 0.08340570 0.10845229 0.7691 0.4418611 ## numcars:3 0.02412224 0.11385000 0.2119 0.8322027 ## numcars:4 -0.35470532 0.15922101 -2.2278 0.0258969 * ## edu:2 0.09033371 0.08476675 1.0657 0.2865711 ## edu:3 0.21765011 0.09487551 2.2941 0.0217871 * ## edu:4 -0.00475892 0.12980749 -0.0367 0.9707550 ## income:2 -0.01070840 0.07000961 -0.1530 0.8784328 ## income:3 -0.04329121 0.07768626 -0.5573 0.5773519 ## income:4 -0.01112286 0.10371253 -0.1072 0.9145930 ## politics:2 -0.15253774 0.05211226 -2.9271 0.0034214 ** ## politics:3 -0.19656259 0.05687906 -3.4558 0.0005487 *** ## politics:4 -0.07567912 0.07405617 -1.0219 0.3068211 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Log-Likelihood: -663.51 ## McFadden R^2: 0.062686 ## Likelihood ratio test : chisq = 88.75 (p.value = 2.6494e-10) evdata.fitted = fitted(bhat,outcome=FALSE) rm(bhat,evdata,evdata.fitted) "],["limited-dependent-variable-models.html", "9 Limited Dependent Variable Models", " 9 Limited Dependent Variable Models "]]
